# reports_page.py

import streamlit as st
import os

from utils.config import INFERENCE_FOLDER, REPORT_FOLDER
from utils.reports import (
    list_inference_results,
    list_reports,
    save_csv_report,
    save_pdf_report
)


def reports_page():
    st.title("üìë –ó–≤—ñ—Ç–∏")

    inc_dir = INFERENCE_FOLDER
    report_dir = REPORT_FOLDER

    # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ CSV-—Ñ–∞–π–ª—ñ–≤ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ inference
    results = list_inference_results(inc_dir)
    if not results:
        st.info("–§–∞–π–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ inference –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    # –û—Ç—Ä–∏–º—É—î–º–æ –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –∑–≤—ñ—Ç–∏
    existing = list_reports(report_dir)

    # –§–æ—Ä–º–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É
    with st.form("generate_report"):
        result_file = st.selectbox(
            "–í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ inference:",
            options=[""] + results
        )
        report_type = st.selectbox(
            "–¢–∏–ø –∑–≤—ñ—Ç—É:",
            options=["CSV", "PDF"]
        )
        submit = st.form_submit_button("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—ñ—Ç")

    if submit:
        if not result_file:
            st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.")
        else:
            try:
                if report_type == "CSV":
                    filename = save_csv_report(inc_dir, report_dir, result_file)
                else:
                    filename = save_pdf_report(inc_dir, report_dir, result_file)

                st.success(f'–ó–≤—ñ—Ç "{filename}" —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.')
                # –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –Ω–∞—è–≤–Ω–∏—Ö –∑–≤—ñ—Ç—ñ–≤
                existing = list_reports(report_dir)
            except Exception as e:
                st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–≤—ñ—Ç—É: {e}")

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –∑–≤—ñ—Ç–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    st.subheader("–î–æ—Å—Ç—É–ø–Ω—ñ –∑–≤—ñ—Ç–∏")

    st.markdown("**CSV-–∑–≤—ñ—Ç–∏**")
    if existing['csv']:
        for fname in existing['csv']:
            path = os.path.join(report_dir, fname)
            with open(path, "rb") as f:
                data = f.read()
            st.download_button(
                label=f"–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ {fname}",
                data=data,
                file_name=fname,
                mime="text/csv"
            )
    else:
        st.write("CSV-–∑–≤—ñ—Ç—ñ–≤ –Ω–µ–º–∞—î.")

    st.markdown("**PDF-–∑–≤—ñ—Ç–∏**")
    if existing['pdf']:
        for fname in existing['pdf']:
            path = os.path.join(report_dir, fname)
            with open(path, "rb") as f:
                data = f.read()
            st.download_button(
                label=f"–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ {fname}",
                data=data,
                file_name=fname,
                mime="application/pdf"
            )
    else:
        st.write("PDF-–∑–≤—ñ—Ç—ñ–≤ –Ω–µ–º–∞—î.")
