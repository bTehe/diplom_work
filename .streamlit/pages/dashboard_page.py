# dashboard_page.py

import streamlit as st
from pathlib import Path

# –®–ª—è—Ö–∏ –¥–æ –ø–∞–ø–æ–∫
BASE_DIR = Path(".streamlit/utils")
DATA_DIR = BASE_DIR / "data"
UPLOAD_FOLDER = DATA_DIR / "raw"
PROCESSED_FOLDER = DATA_DIR / "processed"
MODEL_FOLDER = BASE_DIR / "models"
INFERENCE_FOLDER = DATA_DIR / "inference_results"
REPORT_FOLDER = BASE_DIR / "reports"

def count_files(directory: Path, pattern: str = "*") -> int:
    """Count files in directory matching pattern"""
    if not directory.exists():
        return 0
    return len(list(directory.glob(pattern)))

def dashboard_page():
    st.title("üõ°Ô∏è –°–∏—Å—Ç–µ–º–∞ –≤–∏—è–≤–ª–µ–Ω–Ω—è –∫—ñ–±–µ—Ä-–∞—Ç–∞–∫")
    st.write("–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —ñ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≥–ª–∏–±–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è.")

    # –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ, —â–æ –ø–∞–ø–∫–∏ —î
    for folder in [UPLOAD_FOLDER, PROCESSED_FOLDER, MODEL_FOLDER, INFERENCE_FOLDER, REPORT_FOLDER]:
        folder.mkdir(parents=True, exist_ok=True)

    # –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats = {
        "raw_files": count_files(UPLOAD_FOLDER),
        "processed_files": count_files(PROCESSED_FOLDER),
        "models": count_files(MODEL_FOLDER, "*.h5"),
        "inference_runs": count_files(INFERENCE_FOLDER),
        "reports": count_files(REPORT_FOLDER),
    }

    # –í–∏–≤–æ–¥–∏–º–æ –≤—Å—ñ 5 –º–µ—Ç—Ä–∏–∫ –≤ –æ–¥–Ω—ñ–π —Å—Ç—Ä—ñ—á—Ü—ñ –∑ 5 –∫–æ–ª–æ–Ω–æ–∫
    cols = st.columns(5)
    cols[0].metric(label="üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ñ–∞–π–ª–∏", value=stats["raw_files"], help="–æ—á—ñ–∫—É—é—Ç—å –æ–±—Ä–æ–±–∫–∏")
    cols[1].metric(label="‚öôÔ∏è –û–±—Ä–æ–±–ª–µ–Ω—ñ –¥–∞–Ω—ñ", value=stats["processed_files"], help="–≥–æ—Ç–æ–≤—ñ –¥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")
    cols[2].metric(label="ü§ñ –ù–∞–≤—á–µ–Ω—ñ –º–æ–¥–µ–ª—ñ", value=stats["models"], help="–¥–æ—Å—Ç—É–ø–Ω—ñ –¥–ª—è inference")
    cols[3].metric(label="üìä –ó–∞–ø—É—Å–∫–∏ inference", value=stats["inference_runs"], help="—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤ —ñ—Å—Ç–æ—Ä—ñ—ó")
    cols[4].metric(label="üìù –ó–≤—ñ—Ç–∏", value=stats["reports"], help="CSV & PDF")

    st.markdown("---")
    st.info(
        "–ü–æ—Ä–∞–¥–∞: –ø–µ—Ä–µ–π–¥—ñ—Ç—å —É —Ä–æ–∑–¥—ñ–ª ¬´Preprocessing¬ª, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –π –æ–±—Ä–æ–±–∏—Ç–∏ –¥–∞–Ω—ñ, "
        "–∞–±–æ –≤ ¬´Training¬ª, —â–æ–± –Ω–∞—Ç—Ä–µ–Ω—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª—å –Ω–∞ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö."
    )
